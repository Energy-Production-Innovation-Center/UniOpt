version: 3

# Environment Variables.
env:
  # Enable Docker multi stage builds.
  DOCKER_BUILDKIT: 1

# Global Variables.
vars:
  # Output dir is where all generated artifacts go.
  OUT_DIR: ./out
  # Report dir is where all reports goes (lint, test results).
  REPORT_DIR: "{{.OUT_DIR}}/report"
  # Application version.
  APP_VERSION:
    sh: |
      if [ "{{OS}}" = "linux" ]; then
        ./scripts/version.sh
      fi

# Task Definitions.
tasks:
  install:
    desc: Set up conda environment for local development.
    platforms: [linux, windows]
    deps:
      - task: install:linux
      - task: install:windows

  install:linux:
    internal: true
    platforms: [linux]
    run: once
    vars:
      ENV_NAME:
        sh: basename "$PWD"
    status:
      - conda info --envs | grep -Eq "\b{{.ENV_NAME}}\b"
    sources:
      - pyproject.toml
    cmds:
      - scripts/conda.sh

  install:windows:
    internal: true
    platforms: [windows]
    run: once
    vars:
      ENV_NAME:
        sh: python scripts\\get_env_name.py
    status:
      - conda info --envs | findstr "{{.ENV_NAME}}"
    sources:
      - pyproject.toml
    cmds:
      - scripts\\conda.bat

  format:check:
    desc: Check code style.
    platforms: [linux, windows]
    deps:
      - task: format:check:linux
      - task: format:check:windows

  format:check:linux:
    internal: true
    platforms: [linux]
    cmds:
      - scripts/conda.sh ruff format --diff

  format:check:windows:
    internal: true
    platforms: [windows]
    cmds:
      - scripts\\conda.bat ruff format --diff

  format:fix:
    desc: Fix code style.
    platforms: [linux, windows]
    deps:
      - task: format:fix:linux
      - task: format:fix:windows

  format:fix:linux:
    internal: true
    platforms: [linux]
    cmds:
      - scripts/conda.sh ruff format

  format:fix:windows:
    internal: true
    platforms: [windows]
    cmds:
      - scripts\\conda.bat ruff format

  lint:check:
    desc: Analyze code to flag potential problems.
    platforms: [linux, windows]
    deps:
      - task: lint:check:linux
      - task: lint:check:windows

  lint:check:linux:
    internal: true
    platforms: [linux]
    cmds:
      - task: install:linux
      - scripts/conda.sh ruff check

  lint:check:windows:
    internal: true
    platforms: [windows]
    cmds:
      - task: install:windows
      - scripts\\conda.bat ruff check

  lint:fix:
    desc: Analyze code and try to fix potential problems.
    platforms: [linux, windows]
    deps:
      - task: lint:fix:linux
      - task: lint:fix:windows

  lint:fix:linux:
    internal: true
    platforms: [linux]
    cmds:
      - task: install:linux
      - scripts/conda.sh ruff check --fix --unsafe-fixes

  lint:fix:windows:
    internal: true
    platforms: [windows]
    cmds:
      - task: install:windows
      - scripts\\conda.bat ruff check --fix --unsafe-fixes

  type:check:
    desc: Analyze code to ensure correct use of variables and functions types.
    cmds:
      - >
        docker build .
        --target type
        --output {{.REPORT_DIR}}
        --build-arg APP_VERSION={{.APP_VERSION}}
      - cmd: cat {{.REPORT_DIR}}/type_check.txt
        platforms: [linux]
      - cmd: cat {{.REPORT_DIR}}/type_check.txt | grep -q 'All checks passed!'
        platforms: [linux]

  check:
    desc: Run code analysis for formatting, linting and typing.
    platforms: [linux]
    cmds:
      - task: install
      - task: format:check
      - task: lint:check
      - task: type:check

  fix:
    desc: Try to fix potential problems and code style.
    platforms: [linux]
    cmds:
      - task: install
      - task: format:fix
      - task: lint:fix
