[project]
name            = "uniopt"
description     = "A library with optimization algorithms"
authors         = [{ name = "EpicUTS", email = "cepuni02@unicamp.br" }]
dynamic         = ["version"]
requires-python = ">=3.11, <3.13"

dependencies = ["numpy", "psutil", "typing-extensions>=4.9.0"]

[project.optional-dependencies]
# Local development dependencies
dev = ["ruff"]
# Continuous integration dependencies
ci = ["ty"]

[tool.ruff]
indent-width = 4
line-length  = 100
src          = ["uniopt", "scripts"]

[tool.ruff.lint]
select = [
  "A",   # Detect shadowed builtins
  "B",   # flake8-bugbear
  "C4",  # Catch incorrect use of comprehensions, dict, list, etc
  "E",   # PyCodeStyle errors
  "F",   # Pyflakes rules
  "FA",  # Enforce from __future__ import annotations
  "G",   # Better usage of built-in logging
  "I",   # Sort imports properly
  "ICN", # Use common import conventions
  "ISC", # Good use of string concatenation
  "LOG", # Checks for issues using the standard library logging module.
  "N",   # Enforce naming conventions, e.g. ClassName vs function_name
  "NPY", # Some numpy-specific things
  "PL",  # PyLint
  "PTH", # Use pathlib instead of os.path
  "PYI", # Linting rules for type annotations.
  "Q",   # Linting rules for quotes
  "RET", # Good return practices
  "RUF", # Ruff lint
  "SIM", # Common simplification rules
  "TC",  # Enforce importing certain types in a TYPE_CHECKING block
  "TID", # Some good import practices
  "UP",  # Warn if certain things can changed due to newer Python versions
  "W",   # PyCodeStyle warnings
]
